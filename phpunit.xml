<?xml version="1.0" encoding="UTF-8"?>
<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"
         bootstrap="vendor/autoload.php"
         colors="true"
>
    <testsuites>
        <testsuite name="Feature">
            <directory>tests/Feature</directory>
        </testsuite>
        <testsuite name="Unit">
            <directory>tests/Unit</directory>
        </testsuite>
    </testsuites>
    <source>
        <include>
            <directory>app</directory>
        </include>
        <exclude>
            <directory>app/Console</directory>
            <directory>app/Exceptions</directory>
            <directory>app/Http/Middleware</directory>
            <file>app/Http/Kernel.php</file>
            <file>app/Providers/RouteServiceProvider.php</file>
        </exclude>
    </source>
    <coverage>
        <report>
            <html outputDirectory="tests/coverage/html"/>
            <text outputFile="tests/coverage/coverage.txt"/>
            <clover outputFile="tests/coverage/clover.xml"/>
        </report>
    </coverage>
    <php>
        <env name="APP_ENV" value="testing"/>
        <env name="BCRYPT_ROUNDS" value="4"/>
        <env name="CACHE_STORE" value="array"/>

        <!-- ⚠️ DATABASE CONFIGURATION FOR TESTS ⚠️ -->
        <!-- Option 1: Use a separate SQL Server test database (RECOMMENDED) -->
        <!-- Uncomment these lines and create a database named 'msc_test_db' -->
        <!-- <env name="DB_CONNECTION" value="sqlsrv"/> -->
        <!-- <env name="DB_DATABASE" value="msc_test_db"/> -->
        <!-- <env name="DB_HOST" value="localhost"/> -->
        <!-- <env name="DB_PORT" value="1433"/> -->
        <!-- <env name="DB_USERNAME" value="sa"/> -->
        <!-- <env name="DB_PASSWORD" value=""/> -->

        <!-- Option 2: Use SQLite in-memory database (fastest, but may have compatibility issues) -->
        <!-- <env name="DB_CONNECTION" value="sqlite"/> -->
        <!-- <env name="DB_DATABASE" value=":memory:"/> -->

        <!-- Option 3: Use .env.testing file (most flexible) -->
        <!-- Create a .env.testing file with your test database configuration -->
        <!-- Laravel will automatically use it when running tests -->

        <!-- ⚠️ WARNING: Without proper configuration, tests will use your development database! ⚠️ -->

        <env name="MAIL_MAILER" value="array"/>
        <env name="PULSE_ENABLED" value="false"/>
        <env name="QUEUE_CONNECTION" value="sync"/>
        <env name="SESSION_DRIVER" value="array"/>
        <env name="TELESCOPE_ENABLED" value="false"/>
    </php>
</phpunit>
