import{a as u}from"./app-taSqzBVs.js";function S(){const t=document.querySelector('meta[name="csrf-token"]');return t?t.content:null}function f(){const t={"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest"},s=S();return s&&(t["X-CSRF-TOKEN"]=s),t}async function l(t,s={}){const e={headers:f(),credentials:"same-origin"},a={...e,...s,headers:{...e.headers,...s.headers}};return fetch(t,a)}async function i(t,s={}){return l(t,{...s,method:"GET"})}async function c(t,s,e={}){const a={...e,method:"POST"};return s&&(a.body=JSON.stringify(s)),l(t,a)}async function p(t,s,e={}){const a={...e,method:"PUT"};return s&&(a.body=JSON.stringify(s)),l(t,a)}async function d(t,s={}){return l(t,{...s,method:"DELETE"})}async function r(t){if(!t.ok){const e=await t.text();let a=`HTTP ${t.status}: ${t.statusText}`;try{a=JSON.parse(e).message||a}catch{a=e||a}throw new Error(a)}const s=t.headers.get("content-type");return s&&s.includes("application/json")?t.json():t.text()}u.defaults.headers.common["X-Requested-With"]="XMLHttpRequest";u.defaults.headers.common.Accept="application/json";u.defaults.withCredentials=!0;var m;const y=(m=document.querySelector('meta[name="csrf-token"]'))==null?void 0:m.getAttribute("content");y&&(u.defaults.headers.common["X-CSRF-TOKEN"]=y);u.interceptors.response.use(t=>t,t=>{var s;return((s=t.response)==null?void 0:s.status)===401&&(window.location.href="/login"),Promise.reject(t)});const h={orders:{async getAll(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/orders${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getAnalytics(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/orders/analytics${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async create(t){const s=await c("/api/orders",t);return r(s)},async update(t,s){const e=await p(`/api/orders/${t}`,s);return r(e)},async approve(t,s){const e=await c(`/api/orders/${t}/approve`,s);return r(e)},async reject(t,s){const e=await c(`/api/orders/${t}/reject`,s);return r(e)}},eligibility:{async checkEligibility(t){const s=await c("/api/v1/eligibility/check",t);return r(s)},async getHistory(){const t=await i("/api/v1/eligibility/history");return r(t)},async getSummary(){const t=await i("/api/v1/eligibility/summary");return r(t)}},medicareValidation:{async quickCheck(t){const s=await c("/api/v1/medicare-validation/quick-check",t);return r(s)},async thoroughValidate(t){const s=await c("/api/v1/medicare-validation/thorough-validate",t);return r(s)},async getDashboard(){const t=await i("/api/v1/medicare-validation/dashboard");return r(t)}},clinicalOpportunities:{async scanOpportunities(t){const s=await c("/api/v1/clinical-opportunities/scan",t);return r(s)},async getBySpecialty(t){const s=await i(`/api/v1/clinical-opportunities/by-specialty/${t}`);return r(s)},async getAnalyticsSummary(){const t=await i("/api/v1/clinical-opportunities/analytics/summary");return r(t)}},productRequests:{async getAll(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/product-requests${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async create(t){const s=await c("/api/product-requests",t);return r(s)},async update(t,s){const e=await p(`/api/product-requests/${t}`,s);return r(e)},async getById(t){const s=await i(`/api/product-requests/${t}`);return r(s)}},products:{async getAll(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/products${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getById(t){const s=await i(`/api/products/${t}`);return r(s)},async search(t){const s=await i(`/api/products/search?q=${encodeURIComponent(t)}`);return r(s)}},providers:{async getAll(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/providers${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getById(t){const s=await i(`/api/providers/${t}`);return r(s)},async create(t){const s=await c("/api/providers",t);return r(s)},async update(t,s){const e=await p(`/api/providers/${t}`,s);return r(e)},async delete(t){const s=await d(`/api/providers/${t}`);return r(s)}},facilities:{async getAll(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/facilities${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getById(t){const s=await i(`/api/facilities/${t}`);return r(s)},async create(t){const s=await c("/api/facilities",t);return r(s)},async update(t,s){const e=await p(`/api/facilities/${t}`,s);return r(e)},async delete(t){const s=await d(`/api/facilities/${t}`);return r(s)}},docuseal:{async getSubmissions(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/v1/admin/docuseal/submissions${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async generateDocument(t){const s=await c("/api/v1/admin/docuseal/generate-document",{order_id:t});return r(s)},async getSubmissionStatus(t){const s=await i(`/api/v1/admin/docuseal/submissions/${t}/status`);return r(s)},async downloadDocument(t){return await i(`/api/v1/admin/docuseal/submissions/${t}/download`)}},commission:{async getRecords(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/commission/records${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getSummary(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/commission/records/summary${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async approveRecord(t,s){const e=await c(`/api/commission/records/${t}/approve`,s);return r(e)},async getRecord(t){const s=await i(`/api/commission/records/${t}`);return r(s)},async getPayouts(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/commission/payouts${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getRules(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/commission/rules${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async createRule(t){const s=await c("/api/commission/rules",t);return r(s)}},organizations:{async getAll(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/organizations${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getById(t){const s=await i(`/api/organizations/${t}`);return r(s)},async create(t){const s=await c("/api/organizations",t);return r(s)},async update(t,s){const e=await p(`/api/organizations/${t}`,s);return r(e)},async delete(t){const s=await d(`/api/organizations/${t}`);return r(s)},async getStats(){const t=await i("/api/organizations/stats");return r(t)}},onboarding:{async getRecords(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/onboarding/records${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getById(t){const s=await i(`/api/onboarding/records/${t}`);return r(s)},async updateStage(t,s){const e=await p(`/api/onboarding/records/${t}/stage`,s);return r(e)},async updateStatus(t,s){const e=await p(`/api/onboarding/records/${t}/status`,s);return r(e)}},analytics:{async getCustomerAnalytics(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/analytics/customers${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getRevenueAnalytics(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/analytics/revenue${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getPerformanceMetrics(){const t=await i("/api/analytics/performance");return r(t)}},salesReps:{async getAll(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/sales-reps${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getById(t){const s=await i(`/api/sales-reps/${t}`);return r(s)},async create(t){const s=await c("/api/sales-reps",t);return r(s)},async update(t,s){const e=await p(`/api/sales-reps/${t}`,s);return r(e)},async delete(t){const s=await d(`/api/sales-reps/${t}`);return r(s)},async getAnalytics(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/sales-reps/analytics${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async getSubRepApprovals(t){const s=new URLSearchParams;t&&Object.entries(t).forEach(([o,n])=>{n!=null&&s.set(o,n.toString())});const e=`/api/sales-reps/sub-rep-approvals${s.toString()?"?"+s.toString():""}`,a=await i(e);return r(a)},async approveSubRep(t,s){const e=await c(`/api/sales-reps/sub-rep-approvals/${t}/approve`,s);return r(e)},async rejectSubRep(t,s){const e=await c(`/api/sales-reps/sub-rep-approvals/${t}/reject`,s);return r(e)},async getTerritories(){const t=await i("/api/sales-reps/territories");return r(t)},async getCommissionSummary(t,s){const e=new URLSearchParams;s&&Object.entries(s).forEach(([n,g])=>{g!=null&&e.set(n,g.toString())});const a=`/api/sales-reps/${t}/commissions/summary${e.toString()?"?"+e.toString():""}`,o=await i(a);return r(o)}}};export{h as a,c as b,r as h};
